{
  "version": "1.0",
  "meta" : {
    "application": "Dependency-Track",
    "version": "3.4.0",
    "timestamp": "2017-04-18T23:31:42Z",
    "baseUrl": "http://dtrack.example.org"
  },
  "project" : {
    "uuid": "ca4f2da9-0fad-4a13-92d7-f627f3168a56",
    "name": "Acme Example",
    "version": "1.0",
    "description": "A sample application"
  },
  "findings" : [
  {
    "component": {
      "uuid": "b815b581-fec1-4374-a871-68862a8f8d52",
      "name": "timespan",
      "version": "2.3.0",
      "purl": "pkg:npm/timespan@2.3.0"
    },
    "vulnerability": {
      "uuid": "115b80bb-46c4-41d1-9f10-8a175d4abb46",
      "source": "NPM",
      "vulnId": "533",
      "title": "Regular Expression Denial of Service",
      "subtitle": "timespan",
      "severity": "LOW",
      "severityRank": 3,
      "cweId": 400,
      "cweName": "Uncontrolled Resource Consumption ('Resource Exhaustion')",
      "description": "Affected versions of `timespan` are vulnerable to a regular expression denial of service when parsing dates.\n\nThe amplification for this vulnerability is significant, with 50,000 characters resulting in the event loop being blocked for around 10 seconds.",
      "recommendation": "No direct patch is available for this vulnerability.\n\nCurrently, the best available solution is to use a functionally equivalent alternative package.\n\nIt is also sufficient to ensure that user input is not being passed into `timespan`, or that the maximum length of such user input is drastically reduced. Limiting the input length to 150 characters should be sufficient in most cases."
    },
    "analysis": {
      "state": "NOT_SET",
      "isSuppressed": false
    },
    "matrix": "ca4f2da9-0fad-4a13-92d7-f627f3168a56:b815b581-fec1-4374-a871-68862a8f8d52:115b80bb-46c4-41d1-9f10-8a175d4abb46"
  },
  {
    "component": {
      "uuid": "979f87f5-eaf5-4095-9d38-cde17bf9228e",
      "name": "uglify-js",
      "version": "2.4.24",
      "purl": "pkg:npm/uglify-js@2.4.24"
    },
    "vulnerability": {
      "uuid": "701a3953-666b-4b7a-96ca-e1e6a3e1def3",
      "source": "NPM",
      "vulnId": "48",
      "title": "Regular Expression Denial of Service",
      "subtitle": "uglify-js",
      "severity": "LOW",
      "severityRank": 3,
      "cweId": 400,
      "cweName": "Uncontrolled Resource Consumption ('Resource Exhaustion')",
      "description": "Versions of `uglify-js` prior to 2.6.0 are affected by a regular expression denial of service vulnerability when malicious inputs are passed into the `parse()` method.\n\n\n### Proof of Concept\n\n```\nvar u = require('uglify-js');\nvar genstr = function (len, chr) {\n    var result = \"\";\n    for (i=0; i<=len; i++) {\n        result = result + chr;\n    }\n\n    return result;\n}\n\nu.parse(\"var a = \" + genstr(process.argv[2], \"1\") + \".1ee7;\");\n```\n\n### Results\n```\n$ time node test.js 10000\nreal\t0m1.091s\nuser\t0m1.047s\nsys\t0m0.039s\n\n$ time node test.js 80000\nreal\t0m6.486s\nuser\t0m6.229s\nsys\t0m0.094s\n```",
      "recommendation": "Update to version 2.6.0 or later."
    },
    "analysis": {
      "isSuppressed": false
    },
    "matrix": "ca4f2da9-0fad-4a13-92d7-f627f3168a56:979f87f5-eaf5-4095-9d38-cde17bf9228e:701a3953-666b-4b7a-96ca-e1e6a3e1def3"
  },
  {
    "component": {
      "uuid": "8f63d8a9-a885-4427-8fbb-2c5ce14984e0",
      "name": "adm-zip",
      "version": "0.4.4",
      "purl": "pkg:npm/adm-zip@0.4.4"
    },
    "vulnerability": {
      "uuid": "2ad2548a-bf12-4937-907e-648bd45e16dd",
      "source": "NPM",
      "vulnId": "681",
      "title": "Arbitrary File Write via Archive Extraction",
      "subtitle": "adm-zip",
      "severity": "HIGH",
      "severityRank": 1,
      "cweId": 29,
      "cweName": "Path Traversal: '\\\\..\\\\filename'",
      "description": "Versions of `adm-zip` before 0.4.9 are vulnerable to arbitrary file write when used to extract a specifically crafted archive that contains path traversal filenames (`../../file.txt` for example).",
      "recommendation": "Update to version 0.4.9 or later."
    },
    "analysis": {
      "state": "FALSE_POSITIVE",
      "isSuppressed": false
    },
    "matrix": "ca4f2da9-0fad-4a13-92d7-f627f3168a56:8f63d8a9-a885-4427-8fbb-2c5ce14984e0:2ad2548a-bf12-4937-907e-648bd45e16dd"
  },
  {
    "component": {
      "uuid": "8faec3d8-455f-421b-8298-72733f9601de",
      "name": "hoek",
      "version": "2.16.3",
      "purl": "pkg:npm/hoek@2.16.3"
    },
    "vulnerability": {
      "uuid": "62a8e813-73e7-4651-87fc-587cbe821757",
      "source": "NPM",
      "vulnId": "566",
      "title": "Prototype pollution",
      "subtitle": "hoek",
      "severity": "MEDIUM",
      "severityRank": 2,
      "cweId": 471,
      "cweName": "Modification of Assumed-Immutable Data (MAID)",
      "description": "Versions of `hoek` prior to 4.2.1 and 5.0.3 are vulnerable to prototype pollution.\n\nThe `merge` function, and the `applyToDefaults` and `applyToDefaultsWithShallow` functions which leverage `merge` behind the scenes, are vulnerable to a prototype pollution attack when provided an _unvalidated_ payload created from a JSON string containing the `__proto__` property.\n\nThis can be demonstrated like so:\n\n```javascript\nvar Hoek = require('hoek');\nvar malicious_payload = '{\"__proto__\":{\"oops\":\"It works !\"}}';\n\nvar a = {};\nconsole.log(\"Before : \" + a.oops);\nHoek.merge({}, JSON.parse(malicious_payload));\nconsole.log(\"After : \" + a.oops);\n```\n\nThis type of attack can be used to overwrite existing properties causing a potential denial of service.",
      "recommendation": "Update to version 4.2.1, 5.0.3 or later."
    },
    "analysis": {
      "isSuppressed": false
    },
    "matrix": "ca4f2da9-0fad-4a13-92d7-f627f3168a56:8faec3d8-455f-421b-8298-72733f9601de:62a8e813-73e7-4651-87fc-587cbe821757"
  },
  {
    "component": {
      "uuid": "dba4c9d0-c271-4ac0-a7a6-769f3c658f20",
      "name": "growl",
      "version": "1.9.2",
      "purl": "pkg:npm/growl@1.9.2"
    },
    "vulnerability": {
      "uuid": "75febfd9-bf5f-40ca-a947-9c05842332e3",
      "source": "NPM",
      "vulnId": "146",
      "title": "Command Injection",
      "subtitle": "growl",
      "severity": "CRITICAL",
      "severityRank": 0,
      "cweId": 94,
      "cweName": "Improper Control of Generation of Code ('Code Injection')",
      "description": "Affected versions of `growl` do not properly sanitize input prior to passing it into a shell command, allowing for arbitrary command execution.",
      "recommendation": "Update to version 1.10.2 or later."
    },
    "analysis": {
      "isSuppressed": false
    },
    "matrix": "ca4f2da9-0fad-4a13-92d7-f627f3168a56:dba4c9d0-c271-4ac0-a7a6-769f3c658f20:75febfd9-bf5f-40ca-a947-9c05842332e3"
  },
  {
    "component": {
      "uuid": "b59a82f2-7a17-4ba8-a97b-d734a5c9416e",
      "name": "stringstream",
      "version": "0.0.5",
      "purl": "pkg:npm/stringstream@0.0.5"
    },
    "vulnerability": {
      "uuid": "6d3d4f13-fe92-46d2-a975-3f457e31b935",
      "source": "NPM",
      "vulnId": "664",
      "title": "Out-of-bounds Read",
      "subtitle": "stringstream",
      "severity": "MEDIUM",
      "severityRank": 2,
      "cweId": 125,
      "cweName": "Out-of-bounds Read",
      "description": "All versions of `stringstream` are vulnerable to out-of-bounds read as it allocates uninitialized Buffers when number is passed in input stream on Node.js 4.x and below.",
      "recommendation": "No fix is currently available for this vulnerability. It is our recommendation to not install or use this module if user input is being passed in to `stringstream`.\n"
    },
    "analysis": {
      "isSuppressed": false
    },
    "matrix": "ca4f2da9-0fad-4a13-92d7-f627f3168a56:b59a82f2-7a17-4ba8-a97b-d734a5c9416e:6d3d4f13-fe92-46d2-a975-3f457e31b935"
  },
  {
    "component": {
      "uuid": "3575af6c-892c-48af-82fa-3655f4e62822",
      "name": "tunnel-agent",
      "version": "0.4.3",
      "purl": "pkg:npm/tunnel-agent@0.4.3"
    },
    "vulnerability": {
      "uuid": "d2f42adb-aeec-49ec-a0df-763ccc1678c5",
      "source": "NPM",
      "vulnId": "598",
      "title": "Memory Exposure",
      "subtitle": "tunnel-agent",
      "severity": "MEDIUM",
      "severityRank": 2,
      "cweId": 20,
      "cweName": "Improper Input Validation",
      "description": "Versions of `tunnel-agent` before 0.6.0 are vulnerable to memory exposure.\n\nThis is exploitable if user supplied input is provided to the auth value and is a number.\n\nProof-of-concept:\n```js\nrequire('request')({\n  method: 'GET',\n  uri: 'http://www.example.com',\n  tunnel: true,\n  proxy:{\n    protocol: 'http:',\n    host:'127.0.0.1',\n    port:8080,\n    auth:USERSUPPLIEDINPUT // number\n  }\n});\n```",
      "recommendation": "Update to version 0.6.0 or later."
    },
    "analysis": {
      "isSuppressed": false
    },
    "matrix": "ca4f2da9-0fad-4a13-92d7-f627f3168a56:3575af6c-892c-48af-82fa-3655f4e62822:d2f42adb-aeec-49ec-a0df-763ccc1678c5"
  }
]
}